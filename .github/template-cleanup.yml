# This workflow runs when someone creates a new repository from this template
# It helps clean up template-specific content and guides the user through initial setup

name: Template Cleanup
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  template-cleanup:
    if: github.repository != 'zestic/api-template'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get repository info
        id: repo-info
        run: |
          echo "repo_name=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_OUTPUT
          echo "repo_owner=$(echo ${{ github.repository }} | cut -d'/' -f1)" >> $GITHUB_OUTPUT

      - name: Update composer.json
        run: |
          sed -i 's|"name": "zestic/api-template"|"name": "${{ github.repository }}"|g' composer.json
          sed -i 's|"homepage": "https://github.com/zestic/api-template"|"homepage": "https://github.com/${{ github.repository }}"|g' composer.json
          sed -i 's|"issues": "https://github.com/zestic/api-template/issues"|"issues": "https://github.com/${{ github.repository }}/issues"|g' composer.json
          sed -i 's|"source": "https://github.com/zestic/api-template"|"source": "https://github.com/${{ github.repository }}"|g' composer.json

      - name: Update README.md
        run: |
          sed -i 's|# Zestic API Template|# ${{ steps.repo-info.outputs.repo_name }}|g' README.md
          sed -i 's|https://github.com/zestic/api-template/generate||g' README.md
          sed -i '/\[\!\[Use this template\]/d' README.md
          sed -i '/## üöÄ Quick Start with This Template/,/4\. Customize the application for your specific needs/d' README.md

      - name: Update GitHub workflows
        run: |
          sed -i 's/zestic_api/${{ steps.repo-info.outputs.repo_name }}/g' .github/workflows/lint.yml
          sed -i 's/zestic_api/${{ steps.repo-info.outputs.repo_name }}/g' .github/workflows/test.yml

      - name: Update environment example
        run: |
          sed -i 's/POSTGRES_DB=zestic_api/POSTGRES_DB=${{ steps.repo-info.outputs.repo_name }}/g' .env.example
          sed -i 's/DB_NAME=zestic_api/DB_NAME=${{ steps.repo-info.outputs.repo_name }}/g' .env.example

      - name: Create initial commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Initial setup from template" || exit 0
          git push

      - name: Create setup reminder issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üöÄ Complete your API setup',
              body: `Welcome to your new API project!

            ## Next Steps

            1. **Review and customize** the \`TEMPLATE_SETUP.md\` file for detailed setup instructions
            2. **Update your database configuration** in \`.env\`
            3. **Generate authentication keys** for JWT tokens
            4. **Customize your GraphQL schema** in \`resources/graphql/workspace.graphql\`
            5. **Add your domain logic** following the existing Profile example

            ## Quick Start

            \`\`\`bash
            # Copy environment file
            cp .env.example .env

            # Start development environment
            docker compose up -d

            # Install dependencies
            docker compose exec app-api composer install

            # Run migrations
            docker compose exec app-api composer migrate
            \`\`\`

            ## Resources

            - üìñ [Template Setup Guide](./TEMPLATE_SETUP.md)
            - üìö [Main README](./README.md)
            - üêõ [Report Issues](https://github.com/${{ github.repository }}/issues)

            Close this issue once you've completed the initial setup!`
            })
